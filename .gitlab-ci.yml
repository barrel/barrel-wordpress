stages:
  - test
  - deploy
  - release
  - merge_request

.git_flow: &GIT_FLOW
  stage: release
  only:
    - develop
  when: manual
    
.import_git: &IMPORT_GIT
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - git remote set-url --push origin $(perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#' <<< $CI_REPOSITORY_URL)
    - bash private/scripts/import_git_remote.sh

.branch_prefixes: &BRANCH_PREFIXES
  only: 
    - /(feature|bugfix|hotfix)\/?(.*)/

image: barrelny/multipurpose-ci:0.0.14
# cache:
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#   - wp-content/themes/$THEME_NAME/node_modules/
test_grammars:
  <<: *BRANCH_PREFIXES
  stage: test
  script: 
    - bash private/scripts/test_grammars.sh
test_modules:
  <<: *BRANCH_PREFIXES
  stage: test
  script: 
    - bash private/scripts/test_modules.sh
test_visual_regression:
  <<: *BRANCH_PREFIXES
  stage: test
  script: 
    - bash private/scripts/test_visual_regression.sh
  artifacts:
    when: always
    paths:
      - private/scripts/backstopjs/backstop_data
    expire_in: 1 week
  allow_failure: true

live_deploy:
  stage: deploy
  only: 
    - master
  when: manual
  <<: *IMPORT_GIT
  script:
    - bash private/scripts/live_deploy.sh
  environment:
    name: live
    url: https://$CI_ENVIRONMENT_SLUG-$PANTHEON_SITE_ID.pantheonsite.io

dev_test_deploy:
  stage: deploy
  only: 
    - master
  <<: *IMPORT_GIT
  script:
    - bash private/scripts/dev_test_deploy.sh
  environment:
    name: test
    url: https://$CI_ENVIRONMENT_SLUG-$PANTHEON_SITE_ID.pantheonsite.io

# multidev
multidev_deploy:
  stage: deploy
  only: 
    - /(develop|feature|bugfix|hotfix)\/?(.*)/
  <<: *IMPORT_GIT
  script:
    - bash private/scripts/multidev_deploy.sh
    - bash private/scripts/gitlab/set_env_url.sh    
  environment:
    name: multidev/${CI_BUILD_REF_SLUG}
    on_stop: multidev_remove

multidev_remove:
  stage: deploy
  only:
    - /^(feature|bugfix|hotfix)\/.*/
  when: manual
  <<: *IMPORT_GIT
  script:
    - bash private/scripts/multidev_remove.sh
  environment:
    name: multidev/${CI_BUILD_REF_SLUG}
    action: stop

create_merge_request:
  stage: merge_request
  only:
    - /^(feature|bugfix|support)\/.*/
  when: manual
  script:
    - ./private/scripts/merge_request.sh

prepare_patch_release:
  <<: *GIT_FLOW
  <<: *IMPORT_GIT
  script:
    - ./private/scripts/prepare.sh -v=patch -f=release -s -y -t=$THEME_NAME
prepare_minor_release:
  <<: *GIT_FLOW
  <<: *IMPORT_GIT
  script:
    - ./private/scripts/prepare.sh -v=minor -f=release -s -y -t=$THEME_NAME
prepare_major_release:
  <<: *GIT_FLOW
  <<: *IMPORT_GIT
  script:
    - ./private/scripts/prepare.sh -v=major -f=release -s -y -t=$THEME_NAME
